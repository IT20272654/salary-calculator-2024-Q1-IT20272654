{"ast":null,"code":"var _jsxFileName = \"/Users/shavindurajapaksha/Files/salary-calculator-2024/salary-calculator-2024-q1-it20272654/src/page/Salary.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './salary.css';\nimport { isValidInputTimeValue } from '@testing-library/user-event/dist/utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Salary = () => {\n  _s();\n  const [value1, setValue1] = useState(0);\n  const [value2, setValue2] = useState(0);\n  const [additionalValues, setAdditionalValues] = useState([]);\n  const [sum, setSum] = useState(0);\n  useEffect(() => {\n    let total = value1 + value2;\n    additionalValues.forEach(val => {\n      total += val;\n    });\n    setSum(total);\n  }, [value1, value2, additionalValues]);\n  const handleAdditionalValueChange = (index, newValue) => {\n    const updatedValues = [...additionalValues];\n    updatedValues[index] = parseFloat(newValue) || 0;\n    setAdditionalValues(updatedValues);\n  };\n  const addNewValueField = () => {\n    setAdditionalValues([...additionalValues, 0]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sum Calculator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: value1,\n      onChange: e => setValue1(parseFloat(e.target.value) || 0),\n      placeholder: \"Enter first value\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: value2,\n      onChange: e => setValue2(parseFloat(e.target.value) || 0),\n      placeholder: \"Enter second value\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), showAdditionalInput && /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: additionalValue,\n      onChange: e => setAdditionalValue(parseFloat(e.target.value) || 0),\n      placeholder: \"Enter additional value for first value\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowAdditionalInput(true),\n      children: \"Add Another Value for First Value\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Sum: \", sum]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(Salary, \"hjmMtu8BhZYq/0KrVwCzdW5mY5o=\");\n_c = Salary;\nexport default Salary;\nvar _c;\n$RefreshReg$(_c, \"Salary\");","map":{"version":3,"names":["React","useState","useEffect","isValidInputTimeValue","jsxDEV","_jsxDEV","Salary","_s","value1","setValue1","value2","setValue2","additionalValues","setAdditionalValues","sum","setSum","total","forEach","val","handleAdditionalValueChange","index","newValue","updatedValues","parseFloat","addNewValueField","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","showAdditionalInput","additionalValue","setAdditionalValue","onClick","setShowAdditionalInput","_c","$RefreshReg$"],"sources":["/Users/shavindurajapaksha/Files/salary-calculator-2024/salary-calculator-2024-q1-it20272654/src/page/Salary.jsx"],"sourcesContent":["import React, { useState,useEffect } from 'react'\nimport './salary.css'\nimport { isValidInputTimeValue } from '@testing-library/user-event/dist/utils';\n\nconst Salary = () => {\n    const [value1, setValue1] = useState(0);\n    const [value2, setValue2] = useState(0);\n    const [additionalValues, setAdditionalValues] = useState([]);\n    const [sum, setSum] = useState(0);\n  \n    useEffect(() => {\n      let total = value1 + value2;\n      additionalValues.forEach(val => {\n        total += val;\n      });\n      setSum(total);\n    }, [value1, value2, additionalValues]);\n  \n    const handleAdditionalValueChange = (index, newValue) => {\n      const updatedValues = [...additionalValues];\n      updatedValues[index] = parseFloat(newValue) || 0;\n      setAdditionalValues(updatedValues);\n    };\n  \n    const addNewValueField = () => {\n      setAdditionalValues([...additionalValues, 0]);\n    };\n  \n    return(\n        <div>\n        <h1>Sum Calculator</h1>\n        <input\n          type=\"number\"\n          value={value1}\n          onChange={(e) => setValue1(parseFloat(e.target.value) || 0)}\n          placeholder=\"Enter first value\"\n        />\n        <input\n          type=\"number\"\n          value={value2}\n          onChange={(e) => setValue2(parseFloat(e.target.value) || 0)}\n          placeholder=\"Enter second value\"\n        />\n        {showAdditionalInput && (\n          <input\n            type=\"number\"\n            value={additionalValue}\n            onChange={(e) => setAdditionalValue(parseFloat(e.target.value) || 0)}\n            placeholder=\"Enter additional value for first value\"\n          />\n        )}\n        <button onClick={() => setShowAdditionalInput(true)}>\n          Add Another Value for First Value\n        </button>\n        <p>Sum: {sum}</p>\n      </div>\n    )\n}\n\nexport default Salary\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}